openapi: 3.0.3
info:
  title: Rent Room for events API
  version: 1.0.0
  description: Backend Django API to manage small business
paths:
  /api/book/books/:
    get:
      operationId: book_books_list
      tags:
      - book
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: book_books_create
      tags:
      - book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/book/books/{id}/:
    get:
      operationId: book_books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - book
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: book_books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: book_books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: book_books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - book
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/event/events/:
    get:
      operationId: event_events_list
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: event_events_create
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/event/events-type/:
    get:
      operationId: event_events_type_list
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
          description: ''
    post:
      operationId: event_events_type_create
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
  /api/event/events-type/{id}/:
    get:
      operationId: event_events_type_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    put:
      operationId: event_events_type_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    patch:
      operationId: event_events_type_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventType'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
          description: ''
    delete:
      operationId: event_events_type_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event type.
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/event/events/{id}/:
    get:
      operationId: event_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: event_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: event_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: event_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/room/rooms/:
    get:
      operationId: room_rooms_list
      tags:
      - room
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
          description: ''
    post:
      operationId: room_rooms_create
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/room/rooms/{id}/:
    get:
      operationId: room_rooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - room
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: room_rooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: room_rooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: room_rooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - room
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/user/create/:
    post:
      operationId: user_create_create
      description: Create a new user in the system
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/me/:
    get:
      operationId: user_me_retrieve
      description: Manage the authenticated user.
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/token/:
    post:
      operationId: user_token_create
      description: Create a new auth token for user.
      tags:
      - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      description: Serializer for the user authentication object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        room:
          $ref: '#/components/schemas/Room'
      required:
      - id
      - room
      - user
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        type:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - id
      - title
      - type
    EventType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          maxLength: 10
      required:
      - id
      - type
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created_at
      - id
      - title
      - type
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        room:
          $ref: '#/components/schemas/Room'
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        type:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedEventType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          maxLength: 10
    PatchedRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        title:
          type: string
          maxLength: 255
        capacity:
          type: integer
    Room:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        title:
          type: string
          maxLength: 255
        capacity:
          type: integer
      required:
      - capacity
      - event
      - id
      - title
    User:
      type: object
      description: Serializer for the users object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        name:
          type: string
          maxLength: 255
      required:
      - email
      - name
      - password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
